
/****************************************************************************************************
* File cc_clock.h Start!
****************************************************************************************************/
#ifndef _CC_CLOCK_H
#define _CC_CLOCK_H

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/****************************************************************************************************
* Include
****************************************************************************************************/
#include "cc_type.h"

/****************************************************************************************************
* Define
****************************************************************************************************/

/* 1s = 1/72000000  1ms = 1/72000 1ns = 1/72 */
#define TIMER_CLOCK_FREQUENCY (72000000)

/****************************************************************************************************
* Type Define
****************************************************************************************************/

/* clock */
typedef struct
{
    /* tick */
    cc_uint64 tick;
    /* callback */
    cc_void (*callback)(cc_void);
}cc_clock_struct;

/****************************************************************************************************
* Function Interface
****************************************************************************************************/

cc_result cc_clock_init(cc_void);
/* main tick */
cc_result cc_clock_tickincrease(cc_void);
cc_result cc_clock_tickget(cc_uint64 *tick);
cc_uint64 cc_clock_tickgetdirect(cc_void);
cc_result cc_clock_tick_callback_init(cc_void *func);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* _CC_CLOCK_H */
/****************************************************************************************************
* File cc_clock.h End!
****************************************************************************************************/

